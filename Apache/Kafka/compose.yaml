# Docker Compose file for Kafka with KRaft mode (no Zookeeper) - Multi-broker setup
# For more information, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

services:
  # Application service (original)
  app:
    build:
      context: .
      target: final
    # If your application needs to connect to Kafka, uncomment and modify as needed
    # depends_on:
    #   - kafka-controller
    #   - kafka-broker-1
    #   - kafka-broker-2
    #   - kafka-broker-3
    # environment:
    #   - KAFKA_BOOTSTRAP_SERVERS=kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9092

  # Kafka Controller node (KRaft mode)
  kafka-controller:
    image: bitnami/kafka:3.6.0
    container_name: kafka-controller
    ports:
      - "9093:9093"
    environment:
      # KRaft mode configuration for controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-controller:9093,2@kafka-broker-1:9093,3@kafka-broker-2:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT
      # Enable KRaft mode
      - KAFKA_KRAFT_CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka-controller-data:/bitnami/kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-metadata-shell.sh --snapshot /bitnami/kafka/data/__cluster_metadata-0/snapshot/*.checkpoint | grep broker"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Kafka Broker 1
  kafka-broker-1:
    image: bitnami/kafka:3.6.0
    container_name: kafka-broker-1
    depends_on:
      - kafka-controller
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      # KRaft mode configuration for broker
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-controller:9093,2@kafka-broker-1:9093,3@kafka-broker-2:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker-1:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      # Enable KRaft mode
      - KAFKA_KRAFT_CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
      # General broker settings
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      # Cluster settings for multi-node setup
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
    volumes:
      - kafka-broker-1-data:/bitnami/kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Kafka Broker 2
  kafka-broker-2:
    image: bitnami/kafka:3.6.0
    container_name: kafka-broker-2
    depends_on:
      - kafka-controller
    ports:
      - "9094:9092"
      - "29094:29092"
    environment:
      # KRaft mode configuration for broker
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-controller:9093,2@kafka-broker-1:9093,3@kafka-broker-2:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker-2:9092,EXTERNAL://localhost:29094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      # Enable KRaft mode
      - KAFKA_KRAFT_CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
      # General broker settings
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      # Cluster settings for multi-node setup
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
    volumes:
      - kafka-broker-2-data:/bitnami/kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Kafka Broker 3
  kafka-broker-3:
    image: bitnami/kafka:3.6.0
    container_name: kafka-broker-3
    depends_on:
      - kafka-controller
    ports:
      - "9095:9092"
      - "29095:29092"
    environment:
      # KRaft mode configuration for broker
      - KAFKA_CFG_NODE_ID=4
      - KAFKA_CFG_PROCESS_ROLES=broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-controller:9093,2@kafka-broker-1:9093,3@kafka-broker-2:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker-3:9092,EXTERNAL://localhost:29095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      # Enable KRaft mode
      - KAFKA_KRAFT_CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
      # General broker settings
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      # Cluster settings for multi-node setup
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
    volumes:
      - kafka-broker-3-data:/bitnami/kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Kafka UI - a web interface to manage Kafka clusters
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9092

volumes:
  kafka-controller-data:
  kafka-broker-1-data:
  kafka-broker-2-data:
  kafka-broker-3-data:
